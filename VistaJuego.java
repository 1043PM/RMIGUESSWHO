/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package RMIAdivinaQuien;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ale
 */
public class VistaJuego extends javax.swing.JFrame implements InterfazCliente{
    
    InterfazServidor instancia_local;
    String login;
    static boolean adivinador;
    Boton[][] botones = new Boton[2][10];
    int filas = 2;
    int columnas = 10;
    private final String RUTA_PERSONAJES = "./personajes";
    
    /**
     * Creates new form VistaJuego 
     * @param vLogin
     */
    public VistaJuego(VistaLogin vLogin) throws RemoteException {
        adivinador = false;
        instancia_local = vLogin.instancia_local;
        login = vLogin.login;
        initComponents();
        botonEnviar.setEnabled(false);
        jTextArea1.setText("Buscando contrincante....");
        this.inicializarObjetoRemoto();
        instancia_local.difundirMensaje("El usuario "+login+ " se unio a la partida!");
        this.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosing(WindowEvent evt) {
            try {
                onExit();
            } catch (RemoteException ex) {
                Logger.getLogger(VistaLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        });        
    }
    /**
     * inicializa el objeto remoto cliente
     */
    public final void inicializarObjetoRemoto() {        
        try {            
            InterfazCliente interfaz;
            interfaz = this;
            InterfazCliente stub = (InterfazCliente) UnicastRemoteObject.exportObject(interfaz, 0);
            
            Registry registry = LocateRegistry.getRegistry();
            String nombre_objeto_remoto = VistaLogin.campoTextoUsuario.getText();
            registry.rebind(nombre_objeto_remoto, stub);
            System.out.println("Cliente: " + nombre_objeto_remoto);
            
        } catch (RemoteException ex) {
            Logger.getLogger(VistaLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    public void onExit() throws RemoteException {
        
        instancia_local.difundirMensaje("User"+login+" left the chat room!");
        boolean desconectado = instancia_local.desconectar(login);
        if(desconectado) {
            System.out.println("Usuario desconectado");
        }
    }
    
    public VistaJuego() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        botonEnviar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 0), 6));
        jPanel2.setLayout(new java.awt.GridLayout(2, 10));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        botonEnviar.setText("Enviar");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonEnviar)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonEnviar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
    * mediante el objeto servidor difunde el mensaje al otro cliente
    * @param evt 
    */
    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        String login = this.login;
        String mensaje = login + ": " +  jTextField1.getText();
        
        try {
            instancia_local.difundirMensaje(mensaje);
            if(adivinador == true)
                instancia_local.incrementarJugada();
        } catch (RemoteException ex) {
            Logger.getLogger(VistaJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jTextField1.setText("");  
    }//GEN-LAST:event_botonEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(VistaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(VistaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(VistaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(VistaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new VistaJuego().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonEnviar;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    /**
     * Se escribe en el chat del cliente
     * @param mensaje
     * @throws RemoteException 
     */
    @Override
    public void mostrarMensaje(String mensaje) throws RemoteException {
        jTextArea1.append(mensaje + "\n");                
        //System.out.println("Mensaje recibido de " + mensaje);
    }
    /**
     * determina que rol jugar√° el cliente
     * @param adivinador
     * @throws RemoteException 
     */
    
    @Override
    public void empezarJuego(boolean adivinador) throws RemoteException {        
        VistaJuego.adivinador = adivinador;
        
        if (adivinador == true){
            jTextArea1.append("Te toca adivinar el personaje!!\n");
            colocarBotones();
        }else{
            jTextArea1.append("Te toca decir si adivino!!!\n");
            int personajeAdivinar = instancia_local.getPersonajeAdivinar();
            colocarBoton(personajeAdivinar);//***************
        }
        botonEnviar.setEnabled(true);
    }
    /**
     * 
     * @return el rol que ejecuta el cliente
     * @throws RemoteException 
     */
    @Override
    public boolean getStatus() throws RemoteException {
        return  adivinador;
    }
    
    private void colocarBoton(int personajeAdivinar){
        Boton boton = new Boton(0,0,149,142);
        boton.setPersonajeRan(personajeAdivinar); 
        jPanel2.add(boton);
    }
    
    private void colocarBotones(){
        String sDirectorio = RUTA_PERSONAJES;
        File f = new File(sDirectorio);
        int contador = 0;
        
        if(f.exists()){            
            File[] ficheros = f.listFiles();
            List<File> list = Arrays.asList(ficheros);
            
            for(int fila = 0; fila<filas; fila++){
                for(int columna = 0; columna <columnas; columna++){                
                    botones[fila][columna] = new Boton(45*columna, 32*fila,74,71);
                    //Color colorDefault = new Color(51,51,51);
                    //botones[fila][columna].setBackground(colorDefault);
                    //botones[fila][columna].setEnabled(true); 
                    botones[fila][columna].setPersonaje(list.get(contador), true);
                    botones[fila][columna].setName(list.get(contador).getName()); //posible nullpointer exception
                    jPanel2.add(botones[fila][columna]);
                    contador++;
                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"No se encuenta el directorio de personajes");
        }               
    }

    @Override
    public void setGanador(boolean ganador) throws RemoteException {
        if(ganador){
            jTextArea1.append("Felicidades, ganaste!!!" + "\n");              
        }else{
            jTextArea1.append("Se acabaron las oportunidades, perdiste!!!" + "\n");              
        }
        botonEnviar.setEnabled(false);
    } 
}
